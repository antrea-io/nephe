// // Copyright 2022 Antrea Authors.
// //
// // Licensed under the Apache License, Version 2.0 (the "License");
// // you may not use this file except in compliance with the License.
// // You may obtain a copy of the License at
// //
// //      http://www.apache.org/licenses/LICENSE-2.0
// //
// // Unless required by applicable law or agreed to in writing, software
// // distributed under the License is distributed on an "AS IS" BASIS,
// // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// // See the License for the specific language governing permissions and
// // limitations under the License.
//

// Code generated by MockGen. DO NOT EDIT.
// Source: antrea.io/nephe/pkg/controllers/cloud (interfaces: NetworkPolicyController)

// Package networkpolicy is a generated GoMock package.
package networkpolicy

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	watch "k8s.io/apimachinery/pkg/watch"
)

// MockNetworkPolicyController is a mock of NetworkPolicyController interface.
type MockNetworkPolicyController struct {
	ctrl     *gomock.Controller
	recorder *MockNetworkPolicyControllerMockRecorder
}

// MockNetworkPolicyControllerMockRecorder is the mock recorder for MockNetworkPolicyController.
type MockNetworkPolicyControllerMockRecorder struct {
	mock *MockNetworkPolicyController
}

// NewMockNetworkPolicyController creates a new mock instance.
func NewMockNetworkPolicyController(ctrl *gomock.Controller) *MockNetworkPolicyController {
	mock := &MockNetworkPolicyController{ctrl: ctrl}
	mock.recorder = &MockNetworkPolicyControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNetworkPolicyController) EXPECT() *MockNetworkPolicyControllerMockRecorder {
	return m.recorder
}

// LocalEvent mocks base method.
func (m *MockNetworkPolicyController) LocalEvent(arg0 watch.Event) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "LocalEvent", arg0)
}

// LocalEvent indicates an expected call of LocalEvent.
func (mr *MockNetworkPolicyControllerMockRecorder) LocalEvent(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LocalEvent", reflect.TypeOf((*MockNetworkPolicyController)(nil).LocalEvent), arg0)
}
