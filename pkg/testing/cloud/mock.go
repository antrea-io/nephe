// // Copyright 2022 Antrea Authors.
// //
// // Licensed under the Apache License, Version 2.0 (the "License");
// // you may not use this file except in compliance with the License.
// // You may obtain a copy of the License at
// //
// //      http://www.apache.org/licenses/LICENSE-2.0
// //
// // Unless required by applicable law or agreed to in writing, software
// // distributed under the License is distributed on an "AS IS" BASIS,
// // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// // See the License for the specific language governing permissions and
// // limitations under the License.
//

// Code generated by MockGen. DO NOT EDIT.
// Source: antrea.io/nephe/pkg/cloudprovider/cloud (interfaces: CloudInterface)

// Package cloud is a generated GoMock package.
package cloud

import (
	reflect "reflect"

	v1alpha1 "antrea.io/nephe/apis/crd/v1alpha1"
	v1alpha10 "antrea.io/nephe/apis/runtime/v1alpha1"
	cloudresource "antrea.io/nephe/pkg/cloudprovider/cloudresource"
	types "antrea.io/nephe/pkg/types"
	gomock "github.com/golang/mock/gomock"
	types0 "k8s.io/apimachinery/pkg/types"
	client "sigs.k8s.io/controller-runtime/pkg/client"
)

// MockCloudInterface is a mock of CloudInterface interface.
type MockCloudInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCloudInterfaceMockRecorder
}

// MockCloudInterfaceMockRecorder is the mock recorder for MockCloudInterface.
type MockCloudInterfaceMockRecorder struct {
	mock *MockCloudInterface
}

// NewMockCloudInterface creates a new mock instance.
func NewMockCloudInterface(ctrl *gomock.Controller) *MockCloudInterface {
	mock := &MockCloudInterface{ctrl: ctrl}
	mock.recorder = &MockCloudInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCloudInterface) EXPECT() *MockCloudInterfaceMockRecorder {
	return m.recorder
}

// AddAccountResourceSelector mocks base method.
func (m *MockCloudInterface) AddAccountResourceSelector(arg0 *types0.NamespacedName, arg1 *v1alpha1.CloudEntitySelector) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddAccountResourceSelector", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddAccountResourceSelector indicates an expected call of AddAccountResourceSelector.
func (mr *MockCloudInterfaceMockRecorder) AddAccountResourceSelector(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddAccountResourceSelector", reflect.TypeOf((*MockCloudInterface)(nil).AddAccountResourceSelector), arg0, arg1)
}

// AddProviderAccount mocks base method.
func (m *MockCloudInterface) AddProviderAccount(arg0 client.Client, arg1 *v1alpha1.CloudProviderAccount) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddProviderAccount", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddProviderAccount indicates an expected call of AddProviderAccount.
func (mr *MockCloudInterfaceMockRecorder) AddProviderAccount(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddProviderAccount", reflect.TypeOf((*MockCloudInterface)(nil).AddProviderAccount), arg0, arg1)
}

// CreateSecurityGroup mocks base method.
func (m *MockCloudInterface) CreateSecurityGroup(arg0 *cloudresource.CloudResource, arg1 bool) (*string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSecurityGroup", arg0, arg1)
	ret0, _ := ret[0].(*string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateSecurityGroup indicates an expected call of CreateSecurityGroup.
func (mr *MockCloudInterfaceMockRecorder) CreateSecurityGroup(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSecurityGroup", reflect.TypeOf((*MockCloudInterface)(nil).CreateSecurityGroup), arg0, arg1)
}

// DeleteSecurityGroup mocks base method.
func (m *MockCloudInterface) DeleteSecurityGroup(arg0 *cloudresource.CloudResource, arg1 bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSecurityGroup", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteSecurityGroup indicates an expected call of DeleteSecurityGroup.
func (mr *MockCloudInterfaceMockRecorder) DeleteSecurityGroup(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSecurityGroup", reflect.TypeOf((*MockCloudInterface)(nil).DeleteSecurityGroup), arg0, arg1)
}

// DoInventoryPoll mocks base method.
func (m *MockCloudInterface) DoInventoryPoll(arg0 *types0.NamespacedName) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DoInventoryPoll", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DoInventoryPoll indicates an expected call of DoInventoryPoll.
func (mr *MockCloudInterfaceMockRecorder) DoInventoryPoll(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DoInventoryPoll", reflect.TypeOf((*MockCloudInterface)(nil).DoInventoryPoll), arg0)
}

// GetAccountState mocks base method.
func (m *MockCloudInterface) GetAccountState(arg0 *types0.NamespacedName) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccountState", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAccountState indicates an expected call of GetAccountState.
func (mr *MockCloudInterfaceMockRecorder) GetAccountState(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccountState", reflect.TypeOf((*MockCloudInterface)(nil).GetAccountState), arg0)
}

// GetAccountStatus mocks base method.
func (m *MockCloudInterface) GetAccountStatus(arg0 *types0.NamespacedName) (*v1alpha1.CloudProviderAccountStatus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccountStatus", arg0)
	ret0, _ := ret[0].(*v1alpha1.CloudProviderAccountStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAccountStatus indicates an expected call of GetAccountStatus.
func (mr *MockCloudInterfaceMockRecorder) GetAccountStatus(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccountStatus", reflect.TypeOf((*MockCloudInterface)(nil).GetAccountStatus), arg0)
}

// GetCloudInventory mocks base method.
func (m *MockCloudInterface) GetCloudInventory(arg0 *types0.NamespacedName) (*types.CloudInventory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCloudInventory", arg0)
	ret0, _ := ret[0].(*types.CloudInventory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCloudInventory indicates an expected call of GetCloudInventory.
func (mr *MockCloudInterfaceMockRecorder) GetCloudInventory(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCloudInventory", reflect.TypeOf((*MockCloudInterface)(nil).GetCloudInventory), arg0)
}

// GetEnforcedSecurity mocks base method.
func (m *MockCloudInterface) GetEnforcedSecurity() []cloudresource.SynchronizationContent {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEnforcedSecurity")
	ret0, _ := ret[0].([]cloudresource.SynchronizationContent)
	return ret0
}

// GetEnforcedSecurity indicates an expected call of GetEnforcedSecurity.
func (mr *MockCloudInterfaceMockRecorder) GetEnforcedSecurity() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEnforcedSecurity", reflect.TypeOf((*MockCloudInterface)(nil).GetEnforcedSecurity))
}

// ProviderType mocks base method.
func (m *MockCloudInterface) ProviderType() v1alpha10.CloudProvider {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProviderType")
	ret0, _ := ret[0].(v1alpha10.CloudProvider)
	return ret0
}

// ProviderType indicates an expected call of ProviderType.
func (mr *MockCloudInterfaceMockRecorder) ProviderType() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProviderType", reflect.TypeOf((*MockCloudInterface)(nil).ProviderType))
}

// RemoveAccountResourcesSelector mocks base method.
func (m *MockCloudInterface) RemoveAccountResourcesSelector(arg0, arg1 *types0.NamespacedName) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RemoveAccountResourcesSelector", arg0, arg1)
}

// RemoveAccountResourcesSelector indicates an expected call of RemoveAccountResourcesSelector.
func (mr *MockCloudInterfaceMockRecorder) RemoveAccountResourcesSelector(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveAccountResourcesSelector", reflect.TypeOf((*MockCloudInterface)(nil).RemoveAccountResourcesSelector), arg0, arg1)
}

// RemoveProviderAccount mocks base method.
func (m *MockCloudInterface) RemoveProviderAccount(arg0 *types0.NamespacedName) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RemoveProviderAccount", arg0)
}

// RemoveProviderAccount indicates an expected call of RemoveProviderAccount.
func (mr *MockCloudInterfaceMockRecorder) RemoveProviderAccount(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveProviderAccount", reflect.TypeOf((*MockCloudInterface)(nil).RemoveProviderAccount), arg0)
}

// ResetInventoryCache mocks base method.
func (m *MockCloudInterface) ResetInventoryCache(arg0 *types0.NamespacedName) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResetInventoryCache", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ResetInventoryCache indicates an expected call of ResetInventoryCache.
func (mr *MockCloudInterfaceMockRecorder) ResetInventoryCache(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResetInventoryCache", reflect.TypeOf((*MockCloudInterface)(nil).ResetInventoryCache), arg0)
}

// UpdateSecurityGroupMembers mocks base method.
func (m *MockCloudInterface) UpdateSecurityGroupMembers(arg0 *cloudresource.CloudResource, arg1 []*cloudresource.CloudResource, arg2 bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateSecurityGroupMembers", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateSecurityGroupMembers indicates an expected call of UpdateSecurityGroupMembers.
func (mr *MockCloudInterfaceMockRecorder) UpdateSecurityGroupMembers(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateSecurityGroupMembers", reflect.TypeOf((*MockCloudInterface)(nil).UpdateSecurityGroupMembers), arg0, arg1, arg2)
}

// UpdateSecurityGroupRules mocks base method.
func (m *MockCloudInterface) UpdateSecurityGroupRules(arg0 *cloudresource.CloudResource, arg1, arg2 []*cloudresource.CloudRule) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateSecurityGroupRules", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateSecurityGroupRules indicates an expected call of UpdateSecurityGroupRules.
func (mr *MockCloudInterfaceMockRecorder) UpdateSecurityGroupRules(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateSecurityGroupRules", reflect.TypeOf((*MockCloudInterface)(nil).UpdateSecurityGroupRules), arg0, arg1, arg2)
}
